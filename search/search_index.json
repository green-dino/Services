{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to WENT","text":"<p>As a leader in cybersecurity, our mission is not only to help you intercept predatory attackers but also to provide the necessary people, services, products, and intelligence for this endeavor. With over 15 years of unparalleled security experience, we have consistently demonstrated our commitment through a comprehensive portfolio of solutions ranging from detection to prevention, assessment, and response. </p>"},{"location":"#partners-in-service","title":"Partners in service","text":"<p>As a business owner you understand that combating advanced cyber threats requires a collaborative effort from a team of seasoned experts armed with the right technology. Our organization is dedicated to working alongside you to mitigate these insidious attacks. Cybercriminals are relentlessly targeting your data and finances, making it imperative that you have a trusted partner by your side to safeguard both. Join us in our mission to curb sophisticated cyberattacks. Together, we can make a difference.</p>"},{"location":"#offerings","title":"Offerings","text":"<p>We believe in the power of collaboration at scale. </p> <p>Our Workspaces engine enables customized applications across various industries, empowering organizations of all sizes and diverse cultures to collaborate on innovative projects. By harnessing the collective creativity and expertise of multiple entities, we help our clients achieve outcomes that are greater than what a single organization could accomplish on its own. </p> <p>Let's explore how collaboration at scale can transform your business.</p> <p>Our cloud-based remote workspace solution provides secure and customizable work environments that can be accessed from any device, from any location.</p> <p>Our Solutions are tailored to meet the unique needs of our clients, whether they require advanced security features, streamlined deployment options, or customized software configurations. Our team of experts works closely with each client to understand their requirements and provide a solution that meets their specific needs.</p> <p>Our Support services are delivered by a team of experienced solutions architects and engineers who are passionate about helping our clients succeed. They work closely with each client to understand their requirements and provide tailored solutions that meet their unique needs, ensuring that they achieve success along their Workspaces journey.</p>"},{"location":"Contact/","title":"Contact UsSend us an e-mail","text":"<p>Contact us via e-mail by submitting this form. All fields are required </p> Email Communication Name: Email: Phone Number: Message: Send Email <p>Preparing your email...</p>"},{"location":"OpenSource/","title":"Open Source Data Tools","text":"<p>We have created unique data tools to help your teams create qualitative and quantitative data. </p> <p>Data Frame This tool enables quick data analysis for CSV files to determine quantitative methods. </p>"},{"location":"Solutions/","title":"Solutions","text":""},{"location":"Solutions/#remote-workspaces","title":"Remote Workspaces","text":"<p>Remote workspaces allow users to access their work environment from anywhere, ensuring productivity and flexibility. They offer a secure and managed virtual desktop experience that can be customized to meet specific organizational needs.</p>"},{"location":"Solutions/#browser-isolation","title":"Browser Isolation","text":"<p>Browser isolation helps protect against web-based threats by isolating browsing activity from the endpoint. This approach ensures that any malicious content encountered while browsing does not affect the user's device or the broader network.</p>"},{"location":"Solutions/#web-research","title":"Web Research","text":"<p>Web research solutions provide tools and environments optimized for safely conducting online research. These solutions often include secure browsing, data collection, and analysis tools tailored to the needs of researchers.</p>"},{"location":"Solutions/#enterprise-browsers","title":"Enterprise Browsers","text":"<p>Enterprise browsers are designed to meet the security, compliance, and management needs of businesses. They offer enhanced control over browsing activities, integration with enterprise security solutions, and support for legacy applications.</p>"},{"location":"Solutions/#secure-remote-access","title":"Secure Remote Access","text":"<p>Secure remote access solutions enable users to connect to their corporate networks and resources securely from any location. These solutions typically include multi-factor authentication, encryption, and robust access controls to protect sensitive information.</p>"},{"location":"Solutions/#mlai-development","title":"ML/AI Development","text":"<p>Machine learning (ML) and artificial intelligence (AI) development environments provide the necessary tools and infrastructure for building, testing, and deploying ML/AI models. These solutions support:</p> <ul> <li>Comprehensive Toolsets: Access to a wide range of tools and libraries necessary for effective ML/AI development.</li> <li>Collaborative Platforms: Environments that facilitate seamless collaboration among data scientists and developers.</li> <li>Secure Model Development: Ensuring that ML/AI models are developed in a secure and efficient manner.</li> </ul>"},{"location":"Solutions/#software-assurance","title":"Software Assurance","text":"<p>Gain a comprehensive understanding of your security landscape and be absolutely confident in your technology and infrastructure. Our software assurance team are experts in:</p> <ul> <li>Systems Software: Evaluating and securing the software that forms the foundation of your IT environment.</li> <li>Cryptography: Implementing and assessing cryptographic solutions to protect data and communications.</li> </ul>"},{"location":"Solutions/#classroom-and-training","title":"Classroom and Training","text":"<p>Classroom and training solutions offer virtual environments tailored for educational and training purposes. These solutions support:</p> <ul> <li>Interactive Learning: Engaging tools and platforms that facilitate hands-on learning experiences.</li> <li>Real-time Collaboration: Features that allow for live interaction between instructors and participants, enhancing the learning experience.</li> <li>Resource Accessibility: Easy access to necessary materials and resources, supporting both remote and hybrid learning setups.</li> </ul>"},{"location":"Solutions/#training-topics","title":"Training Topics","text":"<p>Boost your team's expertise with training on a variety of critical topics, including:</p> <ul> <li>Reverse Engineering: Understanding how to deconstruct software to analyze its components.</li> <li>Program Analysis: Techniques for assessing and improving software quality and security.</li> <li>Penetration Testing: Methods for identifying and addressing vulnerabilities in systems.</li> <li>Infrastructure Security: Best practices for securing IT infrastructure against threats.</li> <li>Language Security: Ensuring the security of programming languages and their applications.</li> <li>Threat Modeling: Strategies for identifying, evaluating, and mitigating potential security threats.</li> </ul> <p>These comprehensive training solutions ensure your team is well-equipped to handle the evolving challenges in the cybersecurity landscape.</p>"},{"location":"Solutions/#legacy-app-isolation","title":"Legacy App Isolation","text":"<p>Legacy app isolation solutions ensure that older applications can continue to operate securely within a modern IT environment. These solutions provide:</p> <ul> <li>Encapsulation: Isolating legacy applications in a secure environment to prevent them from impacting other systems.</li> <li>Secure Framework: Offering a protective layer that allows legacy apps to function without compromising the security of the overall IT infrastructure.</li> </ul>"},{"location":"Solutions/#research-development","title":"Research &amp; Development","text":"<p>We are an industry leader in high-end security research. Our team has a proven track record of discovering critical Internet vulnerabilities, even in targets fortified by dedicated security teams. Our commitment to advancing the field includes:</p> <ul> <li>Innovative Research: Conducting cutting-edge research to identify and address emerging security threats.</li> <li>Knowledge Sharing: Whenever possible, we share the deep scientific insights that underpin our work to contribute to the broader security community.</li> </ul> <p>By leveraging our expertise in legacy app isolation and high-end security research, we help organizations maintain the integrity and security of their IT environments while using older applications.</p>"},{"location":"Support/","title":"Support","text":"<p>We understand that achieving success with our Workspaces solution requires more than just a software installation. That's why we offer a range of support services designed to help you plan, deploy, optimize, and customize your Workspaces platform to meet your specific business objectives. Our service packages are tailored to meet your needs at each stage of the journey.</p>"},{"location":"Support/#services","title":"Services","text":""},{"location":"Support/#1-architecture-package","title":"1. Architecture Package","text":"<p>This package includes an analysis of your business requirements to determine the best Workspaces architecture to support your unique needs. A web conference with your business leads will gather requirements/objectives and discuss potential technology solutions. Our solutions architect will then design the optimal deployment, configuration, and approach to operations/maintenance to ensure business goals can be achieved.</p> <p>Outcome: A clear roadmap for your Workspaces implementation that meets your specific needs.</p>"},{"location":"Support/#2-deployment-package","title":"2. Deployment Package","text":"<p>This package includes the deployment of Workspaces within your infrastructure (On-premise or Cloud Provider). A web conference with your technical leads will gather requirements and discuss technical objectives. Our solutions engineer will use our deployment automation to install Workspaces into your infrastructure, resulting in a fully operational and hardened Workspaces deployment.</p> <p>Outcome: A seamless deployment of Workspaces into your existing infrastructure.</p>"},{"location":"Support/#3-customization-package","title":"3. Customization Package","text":"<p>This package includes the implementation of Workspaces features or customization of software/images to support your unique needs. A web conference with your business leads will gather requirements/objectives and discuss potential technology solutions. Our solutions engineer will implement features or build custom software/images and configure them within your Workspaces deployment.</p> <p>Outcome: A custom Workspaces configuration and images tailored to meet your specific requirements.</p>"},{"location":"Support/#4-integration-package","title":"4. Integration Package","text":"<p>This package includes the implementation of Workspaces features to integrate with your existing systems or business workflows. A web conference with your business and technical leads will gather requirements/objectives and discuss integration workflows. Our solutions architect will configure Workspaces to work with your current systems, resulting in Workspaces integrated into existing systems and processes.</p> <p>Outcome: Seamless integration of Workspaces into your existing infrastructure and business workflows.</p>"},{"location":"Support/#5-optimization-package","title":"5. Optimization Package","text":"<p>This package includes the identification of potential areas for security or performance improvement and the implementation of configurations or image updates to enhance platform capability. Our solutions architect will optimize your Workspaces platform, resulting in increased security and performance.</p> <p>Outcome: An enhanced Workspaces platform with improved security and performance.</p>"},{"location":"Support/#6-upgrade-package","title":"6. Upgrade Package","text":"<p>This package includes an upgrade of your existing Workspaces deployment within your infrastructure (On-premise or Cloud Provider). Our solutions engineer will use our deployment automation to upgrade your Workspaces deployment to the latest version, resulting in a more secure and feature-rich platform.</p> <p>Outcome: A seamless upgrade to the latest version of Workspaces within your existing infrastructure.</p>"},{"location":"Resources/Resources/","title":"Exploring Attack Patterns:","text":""},{"location":"Resources/Resources/#exploiting-software-weaknesses-beyond-expectations","title":"Exploiting Software Weaknesses Beyond Expectations","text":"<p>Quality Assurance efforts usually focus on testing that the feature works as expected. In the security world, we examine the software functions in ways never imagined to give us more access to resources and data.</p>"},{"location":"Resources/Resources/#key-questions-for-understanding-the-technology","title":"Key Questions for Understanding the Technology","text":"<p>To understand a technology or system, consider the following key questions:</p> <ol> <li>How does the technology work?</li> <li>What are the data inputs?</li> <li>What are the data outputs?</li> <li>When does the analysis occur?</li> <li>What are the analytical algorithms?</li> <li>How does it operate at scale?</li> <li>How can it be circumvented?</li> <li>How do humans interact with the technology?</li> <li>What are the user's responsibilities?</li> <li>How does this interaction scale?</li> </ol>"},{"location":"Resources/Resources/#introduction","title":"Introduction","text":"<p>Malicious actors care deeply about their work and they do not want to be disrupted while doing it, hence why they spend time working on supply side attacks and doing what they do best avoiding detection. This article will help you counter their efforts and make their jobs more difficult. </p> <p>Think about something concrete, a house, car, building. Now think about how a malicious actor might try to get in to that. A house has windows, vents, doors while a car has doors and windows. </p> <p>Think about the systems in a house, HVAC, Power, Appliances and a car has similar systems but slightly different a motor or engine, transmission, drive-train and entertainment features. </p> <p>Now think about the abstract, a computer here, there, locally or remote has ports, protocols and procedures. These ports, protocols and procedures offer services that we have learned to rely on in our lives.</p> <p>Lets extend that thinking pattern you just explored to some new concepts. Attack Surface Analysis</p>"},{"location":"Resources/Resources/#attack-surface-analysis-helps-you-to","title":"Attack Surface Analysis helps you to:","text":"<pre><code>-Identify what functions and what parts of the system you need to review/test for security vulnerabilities\n\n-Identify high risk areas of code that require defense-in-depth protection - what parts of the system that you need to defend\n\n-Identify when you have changed the attack surface and need to do some kind of threat assessment\n</code></pre>"},{"location":"Resources/Resources/#the-need-for-testing-beyond-expected-behavior","title":"The need for testing beyond expected behavior","text":"<p>The Attack Surface of an application comprises four key components:</p> <ol> <li>Paths for Data/Commands:</li> <li>The sum of all entry and exit points for data and commands in the application.</li> <li> <p>Includes resource connection, authentication, authorization, activity logging, data validation, and encoding.</p> </li> <li> <p>Protection Code for Paths:</p> </li> <li>The code responsible for safeguarding the paths mentioned above.</li> <li> <p>Encompasses measures like resource connection security, access control, and data validation.</p> </li> <li> <p>Valuable Data:</p> </li> <li> <p>All valuable data utilized in the application, such as secrets, keys, intellectual property, critical business data, personal data, and PII (Personally Identifiable Information).</p> </li> <li> <p>Protection Code for Data:</p> </li> <li>The code responsible for protecting the valuable data.</li> <li>Includes encryption, checksums, access auditing, data integrity, and operational security controls.</li> </ol>"},{"location":"Resources/Resources/#organizing-attack-patterns-by-mechanisms","title":"Organizing Attack Patterns by Mechanisms","text":"<p>Here we review attack patterns hierarchically based on common techniques used when exploiting vulnerabilities. These categories represent the various methods employed to attack a system. It's important to note that they don't reflect the consequences or objectives of the attacks.</p> <p>Overlap Potential: Some attack patterns may align with more than one category depending on one's perspective. To mitigate this, each attack pattern within a category is presented with a technique that is consistently applicable, without exceptions.</p>"},{"location":"Resources/Resources/#types-of-attack-patterns","title":"Types of attack patterns","text":"<ol> <li>Engage in Deceptive Interactions</li> <li>Abuse Existing Functionality</li> <li>Manipulate Data Structures</li> <li>Manipulate System Resources</li> <li>Inject Unexpected Items</li> <li>Employ Probabilistic Techniques</li> <li>Manipulate Timing and State</li> <li>Collect and Analyze Information</li> <li>Subvert Access Control</li> </ol> <p>To enhance security, you can overlay this model with various types of users, including their roles and privilege levels when accessing the system. The complexity of your analysis increases with the number of different user types, but it's crucial to focus primarily on two extremes: unauthenticated, anonymous users, and highly privileged admin users (e.g., database administrators and system administrators).</p> <p>Here's a structured approach to this analysis:</p> <ol> <li>User Types and Attack Points:</li> <li>Group each type of user based on their roles, privilege levels, and the points within the system they can access, whether authorized or not.</li> <li> <p>Differentiate between unauthenticated, anonymous users and highly privileged admin users.</p> </li> <li> <p>Attack Point Categories:</p> </li> <li> <p>Categorize attack points into buckets based on factors such as:</p> <ul> <li>Risk (external-facing or internal-facing)</li> <li>Purpose of the attack</li> <li>Implementation details</li> <li>Design considerations</li> <li>Technology used</li> </ul> </li> <li> <p>Count and Prioritize:</p> </li> <li>Count the number of attack points in each category.</li> <li> <p>Select representative cases for each attack point category.</p> </li> <li> <p>Focused Review/Assessment:</p> </li> <li> <p>Concentrate your security review or assessment on these selected representative cases.</p> </li> <li> <p>The goal of identifying and understanding attack patterns</p> </li> </ol>"},{"location":"Resources/Resources/#identifying-and-mapping-the-attack-surface","title":"Identifying and Mapping the Attack Surface","text":"<p>When identifying and mapping the Attack Surface, consider the following steps:</p> <ol> <li>Building a Baseline Description:</li> <li>Create a comprehensive picture and take notes about the Attack Surface.</li> <li> <p>Spend a few hours reviewing design and architecture documents from an attacker's perspective.</p> </li> <li> <p>Identifying Points of Entry/Exit:</p> </li> <li>Review the source code to identify various points of entry and exit.</li> <li> <p>These can include:</p> <ul> <li>User interface (UI) forms and fields</li> <li>HTTP headers and cookies</li> <li>APIs</li> <li>Files</li> <li>Databases</li> <li>Other local storage</li> <li>Email or other messaging systems</li> <li>Runtime arguments</li> <li>And any other specific entry/exit points relevant to your system.</li> </ul> </li> <li> <p>Managing Numerous Attack Points:</p> </li> <li>Recognize that the total number of different attack points can be significant, potentially reaching into the thousands.</li> <li> <p>To make this manageable, categorize them into different types based on function, design, and technology.</p> </li> <li> <p>Categorized Attack Points:</p> </li> <li>Organize your attack points into types that reflect their respective functions, design aspects, and technology.</li> <li>Consider categories such as:<ul> <li>Login/authentication entry points</li> <li>Admin interfaces</li> <li>Inquiries and search functions</li> <li>Data entry (CRUD) forms</li> <li>Business workflows</li> <li>Transactional interfaces/APIs</li> <li>Operational command and monitoring interfaces/APIs</li> <li>Interfaces with other applications/systems</li> <li>And any other relevant types specific to your system.</li> </ul> </li> </ol>"},{"location":"Resources/Resources/#identifying-weaknesses-in-software","title":"Identifying Weaknesses in Software","text":"<p>Common software vulnerabilities (e.g., SQL injection, XSS, buffer overflows) Use the CWE to find common weaknesses  This can identify interesting trends in real-world, exploitable weaknesses that can inform security policy and investment decision-making. To observe both upward and downward trends in CWE ranks. </p>"},{"location":"Resources/Resources/#benefits-of-cwes-common-weakness-enumerations","title":"Benefits of CWEs (Common Weakness Enumerations)","text":"<p>CWEs offer several valuable benefits:</p> <ol> <li>Demonstrative Examples:</li> <li> <p>CWEs provide demonstrative examples, often including sample attack payloads that serve as a starting point for crafting our own exploits.</p> </li> <li> <p>Links to Observed Examples:</p> </li> <li> <p>They also link to observed examples, which are instances found in real production software. These are typically connected to CVEs (Common Vulnerabilities and Exposures).</p> </li> <li> <p>Links to Attack Patterns:</p> </li> <li>One of the most valuable aspects is that CWEs link to related attack patterns. These attack patterns are part of a knowledge base called CAPEC (Common Attack Pattern Enumeration and Classification). CAPEC helps identify and understand common attack patterns used by malicious actors.</li> </ol> <p>Three specific weaknesses in software security have shown a consistent upward trend in ranking, and software developers and maintainers should prioritize addressing them:</p> <ol> <li>CWE-862: Missing Authorization</li> <li>In 2019, it was ranked 36th.</li> <li>Entered the CWE Top 25 in 2020, ranked 25th, and has consistently moved up.</li> <li> <p>In 2023, it's ranked 11th, indicating a need for more diligent implementation of authorization techniques.</p> </li> <li> <p>CWE-918: Server-Side Request Forgery (SSRF)</p> </li> <li>In 2019, it was ranked 32nd.</li> <li>Entered the CWE Top 25 in 2021, ranked 24th, and has steadily climbed.</li> <li> <p>In 2023, it's ranked 19th, showing a consistent upward trend.</p> </li> <li> <p>CWE-639: Authorization Bypass Through User-Controlled Key</p> </li> <li>In 2019, it was ranked outside the top 40.</li> <li>Steadily climbed in rank over the years, reaching 38th in 2023.</li> <li>This upward trend is worth monitoring for further movement and improvements in security.</li> </ol> <p>These weaknesses highlight areas where security measures should be prioritized, and developers should pay attention to implementing safeguards against them.</p>"},{"location":"Resources/Resources/#thinking-like-an-attacker","title":"Thinking Like an Attacker","text":"<p>Attackers are thinking about how to avoid detection, heres a common approach to how an attacker conducts footprinting and builds resources to complete their work. </p>"},{"location":"Resources/Resources/#fingerprinting-of-the-operating-system","title":"Fingerprinting of the Operating System","text":"<ul> <li>Objective: To determine the underlying OS for proper path traversal.</li> <li>Techniques:</li> <li>Port Mapping: Identifying listening ports and protocol types.</li> <li>TCP/IP Fingerprinting: Observing OS-specific responses.</li> <li>Inducing Errors: Generating errors for informative messages.</li> <li>Surveying the Application: Identifying user input areas for specifying file names or paths.</li> </ul> Technique Description Port Mapping Identify listening ports and protocol types. TCP/IP Fingerprinting Observe OS-specific responses for OS guessing. Inducing Errors Generate errors to find informative messages. Surveying the App Identify user input areas for file paths."},{"location":"Resources/Resources/#experimentation-with-input-parameters","title":"Experimentation with Input Parameters","text":"<ul> <li>Objective: Observe system responses to variations in input parameters.</li> </ul> Technique Description Access Common Files Access common files in root directories. Access Drive Letters Access specific drive or volume letters. Access UNC Shares Access known Windows UNC shares."},{"location":"Resources/Resources/#exploiting-vulnerabilities","title":"Exploiting Vulnerabilities","text":"<ul> <li>Objective: Inject path traversal syntax to access, modify, or execute arbitrary files.</li> </ul> Technique Description Manipulate File Paths Manipulate file paths through absolute sequences. Download/Modify/Execute Download, modify, or attempt to execute files."},{"location":"Resources/Resources/#conclusion","title":"Conclusion","text":"<p>When it comes to security testing, even if you've thoroughly covered all the basics like examining Common Weakness Enumerations (CWEs) related to Broken Access Control and tracking down common attack patterns, you can't claim absolute freedom from vulnerabilities. You can't guarantee the software's security with certainty.</p> <p>And that's perfectly fine.</p> <p>There might still be business logic bugs that slipped through the cracks. There could be untested input patterns or unknown tainted payloads that could potentially exploit weaknesses. As you gain more experience, your testing methodology will improve, and you'll likely discover and address these issues over time.</p> <p>The process doesn't end there, though. You'll need to apply the same scrutiny to the other nine items in the Top 10 list. By doing so, you'll establish a solid foundation for protecting against common risks and using real-world attack patterns. It's an ongoing journey towards a more secure software environment.</p>"},{"location":"Resources/Resources/#security","title":"Security","text":"<p>Security</p>"},{"location":"Resources/Resources/#tools","title":"Tools","text":"<p>OWASP</p>"},{"location":"Resources/Security/Aug24/","title":"Aug 24 Security Notice","text":""},{"location":"Resources/Security/Aug24/#purpose","title":"Purpose:","text":"<p>This notice aims to inform readers of important security practices and updates to ensure the protection of our business data and systems.</p>"},{"location":"Resources/Security/Aug24/#scope","title":"Scope:","text":"<p>Covers fundamental cybersecurity practices, recent security threats, and updated procedures.</p>"},{"location":"Resources/Security/Intro/","title":"Security Notice","text":""},{"location":"Resources/Security/Intro/#exploring-attack-patterns","title":"Exploring Attack Patterns:","text":""},{"location":"Resources/Security/Intro/#exploiting-software-weaknesses-beyond-expectations","title":"Exploiting Software Weaknesses Beyond Expectations","text":"<p>Quality Assurance efforts usually focus on testing that the feature works as expected. In the security world, we examine the software functions in ways never imagined to give us more access to resources and data.</p>"},{"location":"Resources/Security/Intro/#key-questions-for-understanding-the-technology","title":"Key Questions for Understanding the Technology","text":"<p>To understand a technology or system, consider the following key questions:</p> <ol> <li>How does the technology work?</li> <li>What are the data inputs?</li> <li>What are the data outputs?</li> <li>When does the analysis occur?</li> <li>What are the analytical algorithms?</li> <li>How does it operate at scale?</li> <li>How can it be circumvented?</li> <li>How do humans interact with the technology?</li> <li>What are the user's responsibilities?</li> <li>How does this interaction scale?</li> </ol>"},{"location":"Resources/Security/Intro/#introduction","title":"Introduction","text":"<p>Malicious actors care deeply about their work and they do not want to be disrupted while doing it, hence why they spend time working on supply side attacks and doing what they do best avoiding detection. This article will help you counter their efforts and make their jobs more difficult. </p> <p>Think about something concrete, a house, car, building. Now think about how a malicious actor might try to get in to that. A house has windows, vents, doors while a car has doors and windows. </p> <p>Think about the systems in a house, HVAC, Power, Appliances and a car has similar systems but slightly different a motor or engine, transmission, drive-train and entertainment features. </p> <p>Now think about the abstract, a computer here, there, locally or remote has ports, protocols and procedures. These ports, protocols and procedures offer services that we have learned to rely on in our lives.</p> <p>Lets extend that thinking pattern you just explored to some new concepts. Attack Surface Analysis</p>"},{"location":"Resources/Security/Intro/#attack-surface-analysis-helps-you-to","title":"Attack Surface Analysis helps you to:","text":"<pre><code>-Identify what functions and what parts of the system you need to review/test for security vulnerabilities\n\n-Identify high risk areas of code that require defense-in-depth protection - what parts of the system that you need to defend\n\n-Identify when you have changed the attack surface and need to do some kind of threat assessment\n</code></pre>"},{"location":"Resources/Security/Intro/#the-need-for-testing-beyond-expected-behavior","title":"The need for testing beyond expected behavior","text":"<p>The Attack Surface of an application comprises four key components:</p> <ol> <li>Paths for Data/Commands:</li> <li>The sum of all entry and exit points for data and commands in the application.</li> <li> <p>Includes resource connection, authentication, authorization, activity logging, data validation, and encoding.</p> </li> <li> <p>Protection Code for Paths:</p> </li> <li>The code responsible for safeguarding the paths mentioned above.</li> <li> <p>Encompasses measures like resource connection security, access control, and data validation.</p> </li> <li> <p>Valuable Data:</p> </li> <li> <p>All valuable data utilized in the application, such as secrets, keys, intellectual property, critical business data, personal data, and PII (Personally Identifiable Information).</p> </li> <li> <p>Protection Code for Data:</p> </li> <li>The code responsible for protecting the valuable data.</li> <li>Includes encryption, checksums, access auditing, data integrity, and operational security controls.</li> </ol>"},{"location":"Resources/Security/Intro/#organizing-attack-patterns-by-mechanisms","title":"Organizing Attack Patterns by Mechanisms","text":"<p>Here we review attack patterns hierarchically based on common techniques used when exploiting vulnerabilities. These categories represent the various methods employed to attack a system. It's important to note that they don't reflect the consequences or objectives of the attacks.</p> <p>Overlap Potential: Some attack patterns may align with more than one category depending on one's perspective. To mitigate this, each attack pattern within a category is presented with a technique that is consistently applicable, without exceptions.</p>"},{"location":"Resources/Security/Intro/#types-of-attack-patterns","title":"Types of attack patterns","text":"<ol> <li>Engage in Deceptive Interactions</li> <li>Abuse Existing Functionality</li> <li>Manipulate Data Structures</li> <li>Manipulate System Resources</li> <li>Inject Unexpected Items</li> <li>Employ Probabilistic Techniques</li> <li>Manipulate Timing and State</li> <li>Collect and Analyze Information</li> <li>Subvert Access Control</li> </ol> <p>To enhance security, you can overlay this model with various types of users, including their roles and privilege levels when accessing the system. The complexity of your analysis increases with the number of different user types, but it's crucial to focus primarily on two extremes: unauthenticated, anonymous users, and highly privileged admin users (e.g., database administrators and system administrators).</p> <p>Here's a structured approach to this analysis:</p> <ol> <li>User Types and Attack Points:</li> <li>Group each type of user based on their roles, privilege levels, and the points within the system they can access, whether authorized or not.</li> <li> <p>Differentiate between unauthenticated, anonymous users and highly privileged admin users.</p> </li> <li> <p>Attack Point Categories:</p> </li> <li> <p>Categorize attack points into buckets based on factors such as:</p> <ul> <li>Risk (external-facing or internal-facing)</li> <li>Purpose of the attack</li> <li>Implementation details</li> <li>Design considerations</li> <li>Technology used</li> </ul> </li> <li> <p>Count and Prioritize:</p> </li> <li>Count the number of attack points in each category.</li> <li> <p>Select representative cases for each attack point category.</p> </li> <li> <p>Focused Review/Assessment:</p> </li> <li> <p>Concentrate your security review or assessment on these selected representative cases.</p> </li> <li> <p>The goal of identifying and understanding attack patterns</p> </li> </ol>"},{"location":"Resources/Security/Intro/#identifying-and-mapping-the-attack-surface","title":"Identifying and Mapping the Attack Surface","text":"<p>When identifying and mapping the Attack Surface, consider the following steps:</p> <ol> <li>Building a Baseline Description:</li> <li>Create a comprehensive picture and take notes about the Attack Surface.</li> <li> <p>Spend a few hours reviewing design and architecture documents from an attacker's perspective.</p> </li> <li> <p>Identifying Points of Entry/Exit:</p> </li> <li>Review the source code to identify various points of entry and exit.</li> <li> <p>These can include:</p> <ul> <li>User interface (UI) forms and fields</li> <li>HTTP headers and cookies</li> <li>APIs</li> <li>Files</li> <li>Databases</li> <li>Other local storage</li> <li>Email or other messaging systems</li> <li>Runtime arguments</li> <li>And any other specific entry/exit points relevant to your system.</li> </ul> </li> <li> <p>Managing Numerous Attack Points:</p> </li> <li>Recognize that the total number of different attack points can be significant, potentially reaching into the thousands.</li> <li> <p>To make this manageable, categorize them into different types based on function, design, and technology.</p> </li> <li> <p>Categorized Attack Points:</p> </li> <li>Organize your attack points into types that reflect their respective functions, design aspects, and technology.</li> <li>Consider categories such as:<ul> <li>Login/authentication entry points</li> <li>Admin interfaces</li> <li>Inquiries and search functions</li> <li>Data entry (CRUD) forms</li> <li>Business workflows</li> <li>Transactional interfaces/APIs</li> <li>Operational command and monitoring interfaces/APIs</li> <li>Interfaces with other applications/systems</li> <li>And any other relevant types specific to your system.</li> </ul> </li> </ol>"},{"location":"Resources/Security/Intro/#identifying-weaknesses-in-software","title":"Identifying Weaknesses in Software","text":"<p>Common software vulnerabilities (e.g., SQL injection, XSS, buffer overflows) Use the CWE to find common weaknesses  This can identify interesting trends in real-world, exploitable weaknesses that can inform security policy and investment decision-making. To observe both upward and downward trends in CWE ranks. </p>"},{"location":"Resources/Security/Intro/#benefits-of-cwes-common-weakness-enumerations","title":"Benefits of CWEs (Common Weakness Enumerations)","text":"<p>CWEs offer several valuable benefits:</p> <ol> <li>Demonstrative Examples:</li> <li> <p>CWEs provide demonstrative examples, often including sample attack payloads that serve as a starting point for crafting our own exploits.</p> </li> <li> <p>Links to Observed Examples:</p> </li> <li> <p>They also link to observed examples, which are instances found in real production software. These are typically connected to CVEs (Common Vulnerabilities and Exposures).</p> </li> <li> <p>Links to Attack Patterns:</p> </li> <li>One of the most valuable aspects is that CWEs link to related attack patterns. These attack patterns are part of a knowledge base called CAPEC (Common Attack Pattern Enumeration and Classification). CAPEC helps identify and understand common attack patterns used by malicious actors.</li> </ol> <p>Three specific weaknesses in software security have shown a consistent upward trend in ranking, and software developers and maintainers should prioritize addressing them:</p> <ol> <li>CWE-862: Missing Authorization</li> <li>In 2019, it was ranked 36th.</li> <li>Entered the CWE Top 25 in 2020, ranked 25th, and has consistently moved up.</li> <li> <p>In 2023, it's ranked 11th, indicating a need for more diligent implementation of authorization techniques.</p> </li> <li> <p>CWE-918: Server-Side Request Forgery (SSRF)</p> </li> <li>In 2019, it was ranked 32nd.</li> <li>Entered the CWE Top 25 in 2021, ranked 24th, and has steadily climbed.</li> <li> <p>In 2023, it's ranked 19th, showing a consistent upward trend.</p> </li> <li> <p>CWE-639: Authorization Bypass Through User-Controlled Key</p> </li> <li>In 2019, it was ranked outside the top 40.</li> <li>Steadily climbed in rank over the years, reaching 38th in 2023.</li> <li>This upward trend is worth monitoring for further movement and improvements in security.</li> </ol> <p>These weaknesses highlight areas where security measures should be prioritized, and developers should pay attention to implementing safeguards against them.</p>"},{"location":"Resources/Security/Intro/#thinking-like-an-attacker","title":"Thinking Like an Attacker","text":"<p>Attackers are thinking about how to avoid detection, heres a common approach to how an attacker conducts footprinting and builds resources to complete their work. </p>"},{"location":"Resources/Security/Intro/#fingerprinting-of-the-operating-system","title":"Fingerprinting of the Operating System","text":"<ul> <li>Objective: To determine the underlying OS for proper path traversal.</li> <li>Techniques:</li> <li>Port Mapping: Identifying listening ports and protocol types.</li> <li>TCP/IP Fingerprinting: Observing OS-specific responses.</li> <li>Inducing Errors: Generating errors for informative messages.</li> <li>Surveying the Application: Identifying user input areas for specifying file names or paths.</li> </ul> Technique Description Port Mapping Identify listening ports and protocol types. TCP/IP Fingerprinting Observe OS-specific responses for OS guessing. Inducing Errors Generate errors to find informative messages. Surveying the App Identify user input areas for file paths."},{"location":"Resources/Security/Intro/#experimentation-with-input-parameters","title":"Experimentation with Input Parameters","text":"<ul> <li>Objective: Observe system responses to variations in input parameters.</li> </ul> Technique Description Access Common Files Access common files in root directories. Access Drive Letters Access specific drive or volume letters. Access UNC Shares Access known Windows UNC shares."},{"location":"Resources/Security/Intro/#exploiting-vulnerabilities","title":"Exploiting Vulnerabilities","text":"<ul> <li>Objective: Inject path traversal syntax to access, modify, or execute arbitrary files.</li> </ul> Technique Description Manipulate File Paths Manipulate file paths through absolute sequences. Download/Modify/Execute Download, modify, or attempt to execute files."},{"location":"Resources/Security/Intro/#conclusion","title":"Conclusion","text":"<p>When it comes to security testing, even if you've thoroughly covered all the basics like examining Common Weakness Enumerations (CWEs) related to Broken Access Control and tracking down common attack patterns, you can't claim absolute freedom from vulnerabilities. You can't guarantee the software's security with certainty.</p> <p>And that's perfectly fine.</p> <p>There might still be business logic bugs that slipped through the cracks. There could be untested input patterns or unknown tainted payloads that could potentially exploit weaknesses. As you gain more experience, your testing methodology will improve, and you'll likely discover and address these issues over time.</p> <p>The process doesn't end there, though. You'll need to apply the same scrutiny to the other nine items in the Top 10 list. By doing so, you'll establish a solid foundation for protecting against common risks and using real-world attack patterns. It's an ongoing journey towards a more secure software environment.</p>"},{"location":"Resources/Security/Intro/#introduction_1","title":"Introduction","text":"<ul> <li>Purpose: This notice aims to inform readers of important security practices and updates to ensure the protection of our business data and systems.</li> <li>Scope: Covers fundamental cybersecurity practices, recent security threats, and updated procedures.</li> </ul>"},{"location":"Resources/Security/Intro/#august","title":"August","text":"<p>August</p>"}]}